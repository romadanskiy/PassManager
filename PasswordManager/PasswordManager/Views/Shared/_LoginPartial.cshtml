@using Microsoft.AspNetCore.Identity
@using PasswordManager.Models

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                <div style="display: flex;">
                    <div>@UserManager.GetUserName(User).Split('@')[0]</div>
                    <div style="opacity: .7;">@@@UserManager.GetUserName(User).Split('@')[1]</div>
                </div>
            </a>
        </li>
        if (@User.IsInRole("admin"))
        {
            <li class="nav-item">
                <a class="nav-link" style="color: darkred;" asp-controller="Admin" asp-action="Index">admin</a>
            </li>
        }
        <li class="nav-item">
            <form class="form-inline" asp-controller="Account" asp-action="LogOff" asp-route-returnUrl="@Url.Action("Index", "Home", new {area = ""})">
                <button type="submit" style="border: 0" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>